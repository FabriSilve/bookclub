{"version":3,"sources":["webpack:///./src/hooks/useTournaments.js","webpack:///./src/utils/getMatchResult.js","webpack:///./src/pages/results.js"],"names":["useTournaments","allMarkdownRemark","edges","getMatchResult","team1","team2","matches","match","find","node","frontmatter","home","visitor","team","console","log","goals","Results","props","tournaments","allMatches","useMatches","title","map","Section","key","name","date","days","i","style","width","margin","teams"],"mappings":"uLA2BeA,EAxBQ,WAqBrB,OArB2B,OACnBC,kBAoBiBC,O,YChBZC,G,UARQ,SAACC,EAAOC,EAAOC,GACpC,IAAMC,EAAQD,EACXE,MAAK,oBAAGC,KAAQC,YAAeC,EAA1B,EAA0BA,KAAMC,EAAhC,EAAgCA,QAAhC,OAAiDD,EAAKE,OAAST,GAASQ,EAAQC,OAASR,KACjG,OAAKE,GACLO,QAAQC,IAAIR,GACFA,EAAME,KAAKC,YAAYC,KAAKK,MAAtC,MAAiDT,EAAME,KAAKC,YAAYE,QAAQI,OAF7D,KCgDNC,UAtCC,SAACC,GACf,IAAMC,EAAcnB,IACdoB,EAAaC,cACnB,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKC,MAAM,cACVH,EAAYI,KAAI,gBAAGd,EAAH,EAAGA,KAAH,OACf,kBAACe,EAAA,EAAD,CAASC,IAAKhB,EAAKC,YAAYgB,MAC7B,4BAAKjB,EAAKC,YAAYgB,MACtB,4BAAKjB,EAAKC,YAAYiB,MACrBlB,EAAKC,YAAYkB,KAAKL,KAAI,SAACjB,EAASuB,GAAV,OACzB,2BAAOJ,IAAKI,EAAGC,MAAO,CAAEC,MAAO,OAAQC,OAAQ,SAC7C,+BACE,4BACE,oCACA,yCACA,sCACA,yCAGJ,+BACG1B,EAAQiB,KAAI,SAACU,EAAOJ,GAAR,OACX,wBAAIJ,IAAKI,GACP,4BAAKI,EAAM,IACX,4BAAKA,EAAM,IACX,4BAAK9B,EAAe8B,EAAM,GAAIA,EAAM,GAAIb,IACxC,4BAAKjB,EAAe8B,EAAM,GAAIA,EAAM,GAAIb,oB","file":"component---src-pages-results-js-83f9d1cf9a8ddec889e2.js","sourcesContent":["import { useStaticQuery, graphql } from \"gatsby\"\n\n\nconst useTournaments = () => {\n  const { allMarkdownRemark } = useStaticQuery(\n    graphql`\n    query tournamentsQuery {\n      allMarkdownRemark(\n        filter: {fileAbsolutePath: {regex: \"/(tournaments)/\"}},\n        sort: {order: ASC, fields: [frontmatter___date]}\n      ) {\n        edges {\n          node {\n            frontmatter {\n              name\n              date\n              days\n            }\n          }\n        }\n      }\n    }\n    `\n  )\n  return allMarkdownRemark.edges\n}\n\nexport default useTournaments;\n","const getMatchResult = (team1, team2, matches) => {\n  const match = matches\n    .find(({ node: { frontmatter: { home, visitor } }}) => home.team === team1 && visitor.team === team2)\n  if (!match) return '';\n  console.log(match)\n  return `${match.node.frontmatter.home.goals} - ${match.node.frontmatter.visitor.goals}`;\n}\n\nexport default getMatchResult;\n","import React from \"react\"\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\n\nimport Section from '../components/layouts/Section'\n\nimport useTournaments from '../hooks/useTournaments';\nimport useMatches from '../hooks/useMatches';\n\nimport getMatchResult from '../utils/getMatchResult';\n\n\nconst Results = (props) => {\n  const tournaments = useTournaments();\n  const allMatches = useMatches();\n  return (\n    <Layout>\n      <SEO title=\"Risultati\" />\n      {tournaments.map(({ node }) => (\n        <Section key={node.frontmatter.name}>\n          <h1>{node.frontmatter.name}</h1>\n          <h2>{node.frontmatter.date}</h2>\n          {node.frontmatter.days.map((matches, i) => (\n            <table key={i} style={{ width: '100%', margin: '1rem'}}>\n              <thead>\n                <tr>\n                  <th>casa</th>\n                  <th>trasferta</th>\n                  <th>andata</th>\n                  <th>ritorno</th>\n                </tr>\n              </thead>\n              <tbody>\n                {matches.map((teams, i) => (\n                  <tr key={i}>\n                    <td>{teams[0]}</td>\n                    <td>{teams[1]}</td>\n                    <td>{getMatchResult(teams[0], teams[1], allMatches)}</td>\n                    <td>{getMatchResult(teams[1], teams[0], allMatches)}</td>\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n          ))}\n        </Section>\n      ))}\n    </Layout>\n  );\n}\n\nexport default Results\n"],"sourceRoot":""}