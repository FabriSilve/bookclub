{"version":3,"sources":["webpack:///./src/hooks/useLeagues.js","webpack:///./src/utils/getLeaguesResult.js","webpack:///./src/pages/index.js","webpack:///./src/components/elements/StyledTitle.js","webpack:///./src/images/trophy.png"],"names":["useLeagues","allMarkdownRemark","edges","getLeaguesResult","leagues","matches","map","league","node","frontmatter","name","tournament","start","dateStart","ladder","teams","team","filter","match","home","visitor","reduce","result","isWin","goals","isDraw","isLost","points","nMatches","wins","losts","draws","gDone","gReceived","sort","a","b","Matches","StyledTrophy","styled","div","StyledCel","span","StyledRow","StyledGrid","IndexPage","useMatches","results","title","description","formatTeamName","Section","key","src","trophy","alt","StyledTitle","index","StyledStart","formatDate","h1","module","exports"],"mappings":"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","file":"component---src-pages-index-js-cdd9066d328276318fc4.js","sourcesContent":["import { useStaticQuery, graphql } from \"gatsby\"\n\n\nconst useLeagues = () => {\n  const { allMarkdownRemark } = useStaticQuery(\n    graphql`\n      query leaguesQuery {\n        allMarkdownRemark(\n          filter: { fileAbsolutePath: {regex: \"/(teams)/\"  }}\n          sort: { order: ASC, fields: [frontmatter___dateStart]}\n        ) {\n          edges {\n            node {\n              frontmatter {\n                tournament\n                teams\n                dateStart\n              }\n            }\n          }\n        }\n      }\n    `\n  )\n  return allMarkdownRemark.edges\n}\n\nexport default useLeagues;","const getLeaguesResult = (leagues, matches) => {\n  const results = leagues.map(({ node: { frontmatter: league }}) => ({\n    name: league.tournament,\n    start: league.dateStart,\n    ladder: league.teams\n      .map((team) => {\n        const teamMatches = matches\n          .filter(({ node: { frontmatter: match } }) => match.home.team === team || match.visitor.team === team);\n        const teamResult = teamMatches.reduce((result, { node: { frontmatter: match } }) => {\n          if (match.home.team === team) {\n            const isWin = match.home.goals > match.visitor.goals;\n            const isDraw = match.home.goals === match.visitor.goals;\n            const isLost = match.home.goals < match.visitor.goals;\n            let points = 0;\n            if (isWin) points = 3;\n            else if (isDraw) points = 1;\n            return {\n              team,\n              points: result.points + points,\n              nMatches: result.nMatches + 1,\n              wins: isWin ? result.wins + 1 : result.wins,\n              losts: isLost ? result.losts + 1 : result.losts,\n              draws: isDraw ? result.draws + 1 : result.draws,\n              gDone: result.gDone + match.home.goals,\n              gReceived: result.gReceived + match.visitor.goals,\n            }\n          } else {\n            const isWin = match.home.goals < match.visitor.goals;\n            const isDraw = match.home.goals === match.visitor.goals;\n            const isLost = match.home.goals > match.visitor.goals;\n            let points = 0;\n            if (isWin) points = 3;\n            else if (isDraw) points = 1;\n            return {\n              team,\n              points: result.points + points,\n              nMatches: result.nMatches + 1,\n              wins: isWin ? result.wins + 1 : result.wins,\n              losts: isLost ? result.losts + 1 : result.losts,\n              draws: isDraw ? result.draws + 1 : result.draws,\n              gDone: result.gDone + match.visitor.goals,\n              gReceived: result.gReceived + match.home.goals,\n            }\n          }\n        }, { team, points: 0, nMatches: 0, wins: 0, losts: 0, draws: 0, gDone: 0, gReceived: 0 });\n        return teamResult;\n      })\n      .sort((a, b) => {\n        if (b.points !== a.points) return b.points - a.points;\n        if (b.gDone !== a.gDone) return b.gDone - a.gDone;\n        if (b.gReceived !== a.gReceived) return b.gReceived - a.gReceived;\n        return b.nMatches - a.Matches;\n      }),\n  }));\n  return results;\n};\n\nexport default getLeaguesResult;\n","import React from \"react\"\nimport styled from 'styled-components';\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\n\nimport Section from '../components/layouts/Section';\n\nimport StyledStart from '../components/elements/StyledStart';\nimport StyledTitle from '../components/elements/StyledTitle';\n\nimport useMatches from '../hooks/useMatches';\nimport useLeagues from '../hooks/useLeagues';\n\nimport getLeaguesResult from '../utils/getLeaguesResult';\nimport formatTeamName from '../utils/formatTeamName';\nimport formatDate from '../utils/formatDate';\n\nimport trophy from '../images/trophy.png';\n\n\nconst StyledTrophy = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 100%;\n  height: 15rem;\n  img {\n    width: auto;\n    height: 100%;\n  }\n`;\n\nconst StyledCel = styled.span`\n  padding: 0.5rem;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nconst StyledRow = styled.div`\n  margin: 0.1rem;\n  border: 1px black solid;\n  width: 100%;\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: space-between;\n`;\n\nconst StyledGrid = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  width: 100%;\n  background-color: rgba(200, 200, 200, 0.5);\n\n  ${StyledRow}:first-child {\n    font-weight: bold;\n  }\n\n  ${StyledRow}:nth-child(2n) {\n    background-color: rgba(100, 100, 100, 0.3);\n  }\n\n  ${StyledCel} {\n    display: none;\n    width: 15%;\n  }\n\n  ${StyledCel}:nth-child(-n+4) {\n    display: flex;\n  }\n\n  ${StyledCel}:nth-child(2) {\n    width: 50%;\n  }\n\n  @media (min-width: ${650 / 16}em) {\n    ${StyledCel} {\n      display: flex;\n      width: 5%;\n    }\n\n    ${StyledCel}:nth-child(2) {\n      width: 30%;\n    }\n  }\n\n  ${StyledCel}:first-child {\n    width: 3%;\n    display: flex;\n  }\n`;\n\nconst IndexPage = () => {\n  const leagues = useLeagues();\n  const matches = useMatches();\n  const results = getLeaguesResult(leagues, matches);\n  return (\n    <Layout>\n      <SEO\n        title=\"Club del Libro | Per sole persone di cultura\"\n        description={`Classifica torneo | № 1 ${formatTeamName(results[0].ladder[0].team)} (${results[0].ladder[0].points} pt.)`}\n      />\n      {results.map((result) => (\n        <Section key={result.name}>\n          <StyledTrophy>\n            <img src={trophy} alt=\"trophy\" />\n          </StyledTrophy>\n          <StyledTitle>Torneo: {result.name}</StyledTitle>\n          <StyledGrid>\n            <StyledRow>\n              <StyledCel>№</StyledCel>\n              <StyledCel>Squadra</StyledCel>\n              <StyledCel>Punti</StyledCel>\n              <StyledCel>Partite</StyledCel>\n              <StyledCel>Vint.</StyledCel>\n              <StyledCel>Pare.</StyledCel>\n              <StyledCel>Pers.</StyledCel>\n              <StyledCel>GF</StyledCel>\n              <StyledCel>GS</StyledCel>\n            </StyledRow>\n            {result.ladder.map((team, index) => (\n              <StyledRow key={team.team}>\n                <StyledCel><strong>{index + 1}°</strong></StyledCel>\n                <StyledCel>{formatTeamName(team.team)}</StyledCel>\n                <StyledCel>{team.points}</StyledCel>\n                <StyledCel>{team.nMatches}</StyledCel>\n                <StyledCel>{team.wins}</StyledCel>\n                <StyledCel>{team.draws}</StyledCel>\n                <StyledCel>{team.losts}</StyledCel>\n                <StyledCel>{team.gDone}</StyledCel>\n                <StyledCel>{team.gReceived}</StyledCel>\n              </StyledRow>\n            ))}\n          </StyledGrid>\n          <StyledStart>Data d'inizio: {formatDate(result.start)}</StyledStart>\n        </Section>\n      ))}\n    </Layout>\n  );\n};\n\nexport default IndexPage\n","import styled from 'styled-components';\n\n\nconst StyledTitle = styled.h1`\n  width: 100%;\n  margin: 1rem 0;\n  text-transform: uppercase;\n  text-align: center;\n`;\n\nexport default StyledTitle;\n","module.exports = __webpack_public_path__ + \"static/trophy-d06f0a7bc6e1446e52c1a1d2b09951bf.png\";"],"sourceRoot":""}