{"version":3,"sources":["webpack:///./src/hooks/useLeagues.js","webpack:///./src/utils/getLeaguesResult.js","webpack:///./src/pages/index.js","webpack:///./src/hooks/useMatches.js"],"names":["useLeagues","allMarkdownRemark","edges","getLeaguesResult","leagues","matches","map","league","node","frontmatter","name","tournament","start","dateStart","ladder","teams","team","filter","match","home","visitor","reduce","result","isWin","goals","isDraw","isLost","points","nMatches","wins","losts","draws","gDone","gReceived","sort","a","b","IndexPage","props","useMatches","results","console","log","title","Section","key"],"mappings":"+YA2BeA,EAxBI,WAqBjB,OArBuB,OACfC,kBAoBiBC,OC4BZC,G,UApDU,SAACC,EAASC,GAiDjC,OAhDgBD,EAAQE,KAAI,gBAAwBC,EAAxB,EAAGC,KAAQC,YAAX,MAAuC,CACjEC,KAAMH,EAAOI,WACbC,MAAOL,EAAOM,UACdC,OAAQP,EAAOQ,MACZT,KAAI,SAACU,GAwCJ,OAvCoBX,EACjBY,QAAO,gBAAwBC,EAAxB,EAAGV,KAAQC,YAAX,OAAsCS,EAAMC,KAAKH,OAASA,GAAQE,EAAME,QAAQJ,OAASA,KACpEK,QAAO,SAACC,EAAD,GAA+C,IAAfJ,EAAc,EAAnCV,KAAQC,YACvD,GAAIS,EAAMC,KAAKH,OAASA,EAAM,CAC5B,IAAMO,EAAQL,EAAMC,KAAKK,MAAQN,EAAME,QAAQI,MACzCC,EAASP,EAAMC,KAAKK,QAAUN,EAAME,QAAQI,MAC5CE,EAASR,EAAMC,KAAKK,MAAQN,EAAME,QAAQI,MAC5CG,EAAS,EAGb,OAFIJ,EAAOI,EAAS,EACXF,IAAQE,EAAS,GACnB,CACLX,OACAW,OAAQL,EAAOK,OAASA,EACxBC,SAAUN,EAAOM,SAAW,EAC5BC,KAAMN,EAAQD,EAAOO,KAAO,EAAIP,EAAOO,KACvCC,MAAOJ,EAASJ,EAAOQ,MAAQ,EAAIR,EAAOQ,MAC1CC,MAAON,EAASH,EAAOS,MAAQ,EAAIT,EAAOS,MAC1CC,MAAOV,EAAOU,MAAQd,EAAMC,KAAKK,MACjCS,UAAWX,EAAOW,UAAYf,EAAME,QAAQI,OAG9C,IAAMD,EAAQL,EAAMC,KAAKK,MAAQN,EAAME,QAAQI,MACzCC,EAASP,EAAMC,KAAKK,QAAUN,EAAME,QAAQI,MAC5CE,EAASR,EAAMC,KAAKK,MAAQN,EAAME,QAAQI,MAC5CG,EAAS,EAGb,OAFIJ,EAAOI,EAAS,EACXF,IAAQE,EAAS,GACnB,CACLX,OACAW,OAAQL,EAAOK,OAASA,EACxBC,SAAUN,EAAOM,SAAW,EAC5BC,KAAMN,EAAQD,EAAOO,KAAO,EAAIP,EAAOO,KACvCC,MAAOJ,EAASJ,EAAOQ,MAAQ,EAAIR,EAAOQ,MAC1CC,MAAON,EAASH,EAAOS,MAAQ,EAAIT,EAAOS,MAC1CC,MAAOV,EAAOU,MAAQd,EAAME,QAAQI,MACpCS,UAAWX,EAAOW,UAAYf,EAAMC,KAAKK,SAG5C,CAAER,OAAMW,OAAQ,EAAGC,SAAU,EAAGC,KAAM,EAAGC,MAAO,EAAGC,MAAO,EAAGC,MAAO,EAAGC,UAAW,OAGtFC,MAAK,SAACC,EAAGC,GAAJ,OAAUA,EAAET,OAASQ,EAAER,gBCYpBU,UA9CG,SAACC,GACjB,IAAMlC,EAAUJ,IACVK,EAAUkC,cACVC,EAAUrC,EAAiBC,EAASC,GAE1C,OADAoC,QAAQC,IAAIF,GAEV,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKG,MAAM,SACVH,EAAQlC,KAAI,SAACgB,GAAD,OACX,kBAACsB,EAAA,EAAD,CAASC,IAAKvB,EAAOZ,MACnB,4BAAKY,EAAOZ,MACZ,4BAAKY,EAAOV,OACZ,+BACE,+BACE,4BACE,uCACA,qCACA,uCACA,qCACA,qCACA,qCACA,kCACA,oCAGJ,+BACGU,EAAOR,OAAOR,KAAI,SAACU,GAAD,OACjB,wBAAI6B,IAAK7B,EAAKA,MACZ,4BAAKA,EAAKA,MACV,4BAAKA,EAAKW,QACV,4BAAKX,EAAKY,UACV,4BAAKZ,EAAKa,MACV,4BAAKb,EAAKe,OACV,4BAAKf,EAAKc,OACV,4BAAKd,EAAKgB,OACV,4BAAKhB,EAAKiB,wB,kDCfbM,IA9BI,WA2BjB,OA3BuB,OACftC,kBA0BiBC,Q","file":"component---src-pages-index-js-ba942d2c3eb69304ed14.js","sourcesContent":["import { useStaticQuery, graphql } from \"gatsby\"\n\n\nconst useLeagues = () => {\n  const { allMarkdownRemark } = useStaticQuery(\n    graphql`\n      query leaguesQuery {\n        allMarkdownRemark(\n          filter: { fileAbsolutePath: {regex: \"/(teams)/\"  }}\n          sort: { order: ASC, fields: [frontmatter___dateStart]}\n        ) {\n          edges {\n            node {\n              frontmatter {\n                tournament\n                teams\n                dateStart\n              }\n            }\n          }\n        }\n      }\n    `\n  )\n  return allMarkdownRemark.edges\n}\n\nexport default useLeagues;","const getLeaguesResult = (leagues, matches) => {\n  const results = leagues.map(({ node: { frontmatter: league }}) => ({\n    name: league.tournament,\n    start: league.dateStart,\n    ladder: league.teams\n      .map((team) => {\n        const teamMatches = matches\n          .filter(({ node: { frontmatter: match } }) => match.home.team === team || match.visitor.team === team);\n        const teamResult = teamMatches.reduce((result, { node: { frontmatter: match } }) => {\n          if (match.home.team === team) {\n            const isWin = match.home.goals > match.visitor.goals;\n            const isDraw = match.home.goals === match.visitor.goals;\n            const isLost = match.home.goals < match.visitor.goals;\n            let points = 0;\n            if (isWin) points = 3;\n            else if (isDraw) points = 1;\n            return {\n              team,\n              points: result.points + points,\n              nMatches: result.nMatches + 1,\n              wins: isWin ? result.wins + 1 : result.wins,\n              losts: isLost ? result.losts + 1 : result.losts,\n              draws: isDraw ? result.draws + 1 : result.draws,\n              gDone: result.gDone + match.home.goals,\n              gReceived: result.gReceived + match.visitor.goals,\n            }\n          } else {\n            const isWin = match.home.goals < match.visitor.goals;\n            const isDraw = match.home.goals === match.visitor.goals;\n            const isLost = match.home.goals > match.visitor.goals;\n            let points = 0;\n            if (isWin) points = 3;\n            else if (isDraw) points = 1;\n            return {\n              team,\n              points: result.points + points,\n              nMatches: result.nMatches + 1,\n              wins: isWin ? result.wins + 1 : result.wins,\n              losts: isLost ? result.losts + 1 : result.losts,\n              draws: isDraw ? result.draws + 1 : result.draws,\n              gDone: result.gDone + match.visitor.goals,\n              gReceived: result.gReceived + match.home.goals,\n            }\n          }\n        }, { team, points: 0, nMatches: 0, wins: 0, losts: 0, draws: 0, gDone: 0, gReceived: 0 });\n        return teamResult;\n      })\n      .sort((a, b) => b.points - a.points),\n  }));\n  return results;\n};\n\nexport default getLeaguesResult;\n","import React from \"react\"\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\n\nimport Section from '../components/layouts/Section';\n\nimport useMatches from '../hooks/useMatches';\nimport useLeagues from '../hooks/useLeagues';\n\nimport getLeaguesResult from '../utils/getLeaguesResult';\n\n\nconst IndexPage = (props) => {\n  const leagues = useLeagues();\n  const matches = useMatches();\n  const results = getLeaguesResult(leagues, matches);\n  console.log(results);\n  return (\n    <Layout>\n      <SEO title=\"Home\" />\n      {results.map((result) => (\n        <Section key={result.name}>\n          <h1>{result.name}</h1>\n          <h2>{result.start}</h2>\n          <table>\n            <thead>\n              <tr>\n                <th>Squadra</th>\n                <th>Punti</th>\n                <th>Partite</th>\n                <th>Vint.</th>\n                <th>Pare.</th>\n                <th>Pers.</th>\n                <th>GF</th>\n                <th>GS</th>\n              </tr>\n            </thead>\n            <tbody>\n              {result.ladder.map((team) => (\n                <tr key={team.team}>\n                  <td>{team.team}</td>\n                  <td>{team.points}</td>\n                  <td>{team.nMatches}</td>\n                  <td>{team.wins}</td>\n                  <td>{team.draws}</td>\n                  <td>{team.losts}</td>\n                  <td>{team.gDone}</td>\n                  <td>{team.gReceived}</td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        </Section>\n      ))}\n    </Layout>\n  );\n};\n\nexport default IndexPage\n","import { useStaticQuery, graphql } from \"gatsby\"\n\n\nconst useMatches = () => {\n  const { allMarkdownRemark } = useStaticQuery(\n    graphql`\n      query matchesQuery {\n        allMarkdownRemark(\n          filter: {fileAbsolutePath: {regex: \"/(matches)/\"}},\n          sort: { order: DESC, fields: [frontmatter___date] }\n        ) {\n          edges {\n            node {\n              frontmatter {\n                date\n                home {\n                  team\n                  goals\n                }\n                visitor {\n                  team\n                  goals\n                }\n              }\n            }\n          }\n        }\n      }\n    `\n  )\n  return allMarkdownRemark.edges\n}\n\nexport default useMatches;"],"sourceRoot":""}