{"version":3,"sources":["webpack:///./src/hooks/useTournaments.js","webpack:///./src/utils/getMatchResult.js","webpack:///./src/pages/results.js","webpack:///./src/components/elements/StyledTitle.js"],"names":["useTournaments","allMarkdownRemark","edges","getMatchResult","team1","team2","matches","goingMatch","find","node","frontmatter","home","visitor","team","backMatch","going","goals","back","StyledCel","styled","span","StyledRow","div","StyledGrid","Results","props","tournaments","allMatches","useMatches","title","description","map","Section","key","name","StyledTitle","days","i","teams","formatTeamName","StyledStart","formatDate","date","h1"],"mappings":"mMA2BeA,EAxBQ,WAqBrB,OArB2B,OACnBC,kBAoBiBC,O,oCCbZC,G,UAXQ,SAACC,EAAOC,EAAOC,GACpC,IAAMC,EAAaD,EAChBE,MAAK,oBAAGC,KAAQC,YAAeC,EAA1B,EAA0BA,KAAMC,EAAhC,EAAgCA,QAAhC,OAAiDD,EAAKE,OAAST,GAASQ,EAAQC,OAASR,KAC3FS,EAAYR,EACfE,MAAK,oBAAGC,KAAQC,YAAeC,EAA1B,EAA0BA,KAAMC,EAAhC,EAAgCA,QAAhC,OAAiDD,EAAKE,OAASR,GAASO,EAAQC,OAAST,KACjG,MAAO,CACLW,MAAOR,EAAgBA,EAAWE,KAAKC,YAAYC,KAAKK,MAAvC,MAAkDT,EAAWE,KAAKC,YAAYE,QAAQI,MAAU,GACjHC,KAAMH,EAAeA,EAAUL,KAAKC,YAAYE,QAAQI,MAAzC,MAAoDF,EAAUL,KAAKC,YAAYC,KAAKK,MAAU,M,wBCY3GE,EAAYC,IAAOC,KAAV,qEAAGD,CAAH,8FAQTE,EAAYF,IAAOG,IAAV,qEAAGH,CAAH,uIAUTI,EAAaJ,IAAOG,IAAV,sEAAGH,CAAH,6RASZE,EAIAA,EAIAH,EAIAA,GAwCWM,UAnCC,SAACC,GACf,IAAMC,EAAc1B,IACd2B,EAAaC,cACnB,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CACEC,MAAM,WACNC,YAAY,qCAEbJ,EAAYK,KAAI,gBAAGtB,EAAH,EAAGA,KAAH,OACf,kBAACuB,EAAA,EAAD,CAASC,IAAKxB,EAAKC,YAAYwB,MAC7B,kBAACC,EAAA,EAAD,gBAAsB1B,EAAKC,YAAYwB,MACtCzB,EAAKC,YAAY0B,KAAKL,KAAI,SAACzB,EAAS+B,GAAV,OACzB,kBAACd,EAAD,CAAYU,IAAKI,GACf,kBAAChB,EAAD,KACE,kBAACH,EAAD,iBAAqBmB,EAAI,GACzB,kBAACnB,EAAD,eACA,kBAACA,EAAD,iBAEDZ,EAAQyB,KAAI,SAACO,EAAOD,GAAR,OACX,kBAAChB,EAAD,CAAWY,IAAKI,GACd,kBAACnB,EAAD,KAAYqB,YAAeD,EAAM,IAAjC,OAA0CC,YAAeD,EAAM,KAC/D,kBAACpB,EAAD,KAAYf,EAAemC,EAAM,GAAIA,EAAM,GAAIX,GAAYZ,OAC3D,kBAACG,EAAD,KAAYf,EAAemC,EAAM,GAAIA,EAAM,GAAIX,GAAYV,cAKnE,kBAACuB,EAAA,EAAD,uBAA6BC,YAAWhC,EAAKC,YAAYgC,c,oCC3FnE,IAGMP,EAHN,UAGoBhB,EAAOwB,GAAV,8DAAGxB,CAAH,0EAOFgB,O","file":"component---src-pages-results-js-e9b4f07505985bbda06b.js","sourcesContent":["import { useStaticQuery, graphql } from \"gatsby\"\n\n\nconst useTournaments = () => {\n  const { allMarkdownRemark } = useStaticQuery(\n    graphql`\n    query tournamentsQuery {\n      allMarkdownRemark(\n        filter: {fileAbsolutePath: {regex: \"/(tournaments)/\"}},\n        sort: {order: ASC, fields: [frontmatter___date]}\n      ) {\n        edges {\n          node {\n            frontmatter {\n              name\n              date\n              days\n            }\n          }\n        }\n      }\n    }\n    `\n  )\n  return allMarkdownRemark.edges\n}\n\nexport default useTournaments;\n","const getMatchResult = (team1, team2, matches) => {\n  const goingMatch = matches\n    .find(({ node: { frontmatter: { home, visitor } }}) => home.team === team1 && visitor.team === team2)\n  const backMatch = matches\n    .find(({ node: { frontmatter: { home, visitor } }}) => home.team === team2 && visitor.team === team1)\n  return {\n    going: goingMatch ? `${goingMatch.node.frontmatter.home.goals} - ${goingMatch.node.frontmatter.visitor.goals}` : '',\n    back: backMatch ? `${backMatch.node.frontmatter.visitor.goals} - ${backMatch.node.frontmatter.home.goals}` : '',\n  }\n}\n\nexport default getMatchResult;\n","import React from \"react\"\nimport styled from 'styled-components';\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\n\nimport Section from '../components/layouts/Section'\n\nimport useTournaments from '../hooks/useTournaments';\nimport useMatches from '../hooks/useMatches';\n\nimport StyledStart from '../components/elements/StyledStart';\nimport StyledTitle from '../components/elements/StyledTitle';\n\nimport getMatchResult from '../utils/getMatchResult';\nimport formatTeamName from '../utils/formatTeamName';\nimport formatDate from '../utils/formatDate';\n\n\nconst StyledCel = styled.span`\n  padding: 0.5rem;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  text-align: center;\n`;\n\nconst StyledRow = styled.div`\n  margin: 0.1rem;\n  border: 1px black solid;\n  width: 100%;\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: space-between;\n`;\n\nconst StyledGrid = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  width: 100%;\n  margin-bottom: 2rem;\n  background-color: rgba(200, 200, 200, 0.5);\n\n  ${StyledRow}:first-child {\n    font-weight: bold;\n  }\n\n  ${StyledRow}:nth-child(2n) {\n    background-color: rgba(100, 100, 100, 0.3);\n  }\n\n  ${StyledCel} {\n    width: 15%;\n  }\n\n  ${StyledCel}:first-child {\n    width: 65%;\n  }\n`;\n\nconst Results = (props) => {\n  const tournaments = useTournaments();\n  const allMatches = useMatches();\n  return (\n    <Layout>\n      <SEO\n        title=\"Giornate\"\n        description=\"Tabella scontri andata e ritorno\"\n      />\n      {tournaments.map(({ node }) => (\n        <Section key={node.frontmatter.name}>\n          <StyledTitle>Torneo: {node.frontmatter.name}</StyledTitle>\n          {node.frontmatter.days.map((matches, i) => (\n            <StyledGrid key={i}>\n              <StyledRow>\n                <StyledCel>Giornata {i + 1}</StyledCel>\n                <StyledCel>andata</StyledCel>\n                <StyledCel>ritorno</StyledCel>\n              </StyledRow>\n              {matches.map((teams, i) => (\n                <StyledRow key={i}>\n                  <StyledCel>{formatTeamName(teams[0])} vs {formatTeamName(teams[1])}</StyledCel>\n                  <StyledCel>{getMatchResult(teams[0], teams[1], allMatches).going}</StyledCel>\n                  <StyledCel>{getMatchResult(teams[0], teams[1], allMatches).back}</StyledCel>\n                </StyledRow>\n              ))}\n            </StyledGrid>\n          ))}\n          <StyledStart>Data d'inizio: {formatDate(node.frontmatter.date)}</StyledStart>\n        </Section>\n      ))}\n    </Layout>\n  );\n}\n\nexport default Results\n","import styled from 'styled-components';\n\n\nconst StyledTitle = styled.h1`\n  width: 100%;\n  margin: 1rem 0;\n  text-transform: uppercase;\n  text-align: center;\n`;\n\nexport default StyledTitle;\n"],"sourceRoot":""}